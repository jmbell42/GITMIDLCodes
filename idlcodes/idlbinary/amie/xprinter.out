%-12345X@PJL JOB
@PJL ENTER LANGUAGE = POSTSCRIPT <0A>
%!PS-Adobe-3.0
%XprinterPrinter-Model: HP LaserJet 8000 Series
%%Creator: Wind/U Xprinter Version 3.3.1 (linux_i32) (Compile Date: Jun 21 2000 10:56:23) (root)
%%Title: 
%%CreationDate:Fri Jan 23 12:12:08 2004
%%DocumentSuppliedResources: (atend)
%%Pages: (atend)
%%LanguageLevel: 2
%%EndComments
%%BeginProlog
/XPrinterDict dup 200 dict def load begin
/bdf{bind def}bind def
/ldf{load def}bdf
/m/rmoveto ldf
/l2/rlineto ldf
/gs/gsave ldf
/gr/grestore ldf
/np/newpath ldf
/sv/save ldf
/rs/restore ldf
/tl/translate ldf
/mt/matrix ldf
/l/length ldf
/z/dict ldf
/d/def ldf
/e/exch ldf
/a/array ldf
/ac/arc ldf
/an/arcn ldf
/b/begin ldf
/pi/putinterval ldf
/t/moveto ldf
/lo/lineto ldf
/st/stroke ldf
/p/add ldf
/s/sub ldf
/c/mul ldf
/v/div ldf
/cp/closepath ldf
/sl/scale ldf
/ff/findfont ldf
/mf/makefont ldf
/sf/setfont ldf
/f/fill ldf
/sw/setlinewidth ldf
/sc/setlinecap ldf
/sj/setlinejoin ldf
/sg/setgray ldf
/ski/ISOLatin1Encoding where{pop true}{false}ifelse d
/fcd{ff dup l z b{1 index /FID ne{d}{pop pop}ifelse}forall /Encoding ISOLatin1Encoding d currentdict end}bdf
/fdf{e definefont pop}bdf
/sdt 22 z d
sdt b
/tpm mt d
/tpt mt d
/tps mt d
/cps
{/pr2 e cvlit d
/pr1 e cvlit d
/npc pr1 l pr2 l p a d
npc 0 pr1 pi
npc pr1 l pr2 pi
npc cvx
}bdf
/rmx mt d
/frs
{72 0 rmx defaultmatrix dtransform
/yres e d /xres e d
xres dup c yres dup c p sqrt
}bdf
end
/sus 
{sdt b
/spf e d
/sag e d 
/ces e d
300 ces v sag /spf load
setscreen
end
}bdf
/spt 18 z d
spt b
/bts
{/ybit e d /xbit e d
/byv bstr ybit bwd c xbit 8 idiv
p get d
/mask 1 7 xbit 8 mod s bitshift d
byv mask and 0 ne
}bdf
end
/bsf
{spt b
/y e d /x e d
/xix x 1 p 2 v bpx c cvi d
/yix y 1 p 2 v bpy c cvi d
xix yix bts
{/onb onb 1 p d 1}
{/ofb ofb 1 p d 0}
ifelse
end
}bdf
/setpattern
{spt b
/csz e d
/agl e d
/bwd e d
/bpy e d
/bpx e d
/bstr e d
/onb 0 d /ofb 0 d
csz agl /bsf load
sus
{ }settransfer
ofb ofb onb p v setgray
end
}bdf
/picstr 500 string d
/inch{72 c}bdf
/DP{gs np 0 360 ac cp f gr}bdf
/DL{gs np t lo st gr}bdf
/RGB{setrgbcolor}bdf
/C{gs t show gr}bdf

/ren 12 z d
/REn
{ren b
/nwc e d
/nwf e d
/bft e d
/bfd bft ff d
/nf bfd maxlength z d
bfd
{e dup /FID ne 
{dup /Encoding eq
{e dup l a copy
nf 3 1 roll put}
{e nf 3 1 roll put}
ifelse
}
{pop pop}
ifelse
}forall
nf /FontName nwf put
nwc aload pop
nwc l 2 idiv
{nf /Encoding get 3 1 roll put}
repeat
nwf nf definefont pop
end
}d
/rots{gs t rotate show gr}bdf
/imdata 256 string def
/imstr1 1 string def
/imdecode{
currentfile imstr1 readhexstring pop 0 get 8 bitshift currentfile imstr1 readhexstring pop 0 get or {
currentfile imdata 
currentfile imstr1 readhexstring pop 0 get 8 bitshift currentfile imstr1 readhexstring pop 0 get or 
currentfile imstr1 readhexstring pop 0 get 
getinterval 
readhexstring pop pop
} repeat
imdata
} bdf

%%EndProlog
%%BeginSetup
%%BeginFeature: *InputSlot Middle
  <</ManualFeed false /MediaPosition 0>> setpagedevice
%%EndFeature
%%BeginFeature: *Duplex None
  <</Duplex false>> setpagedevice
%%EndFeature
%%BeginFeature: *PageRegion Letter
  <</PageSize [612 792] /ImagingBBox null>> setpagedevice
%%EndFeature
%%EndSetup
%%Page: 1
%%BeginPageSetup
/#copies 1 def
sv
1.00 -1.00 sl
12.00 -779.76 tl
%%EndPageSetup
%%BoundingBox: (atend)
gs
/BEPS{
/b4e sv d
/dict_count countdictstack d
/op_count count 1 s d
userdict b
/showpage{}d
0 sg 0 sc
1 sw 0 sj
10 setmiterlimit [] 0 setdash np
/languagelevel where
{pop languagelevel
1 ne
{false setstrokeadjust false setoverprint
}if
}if
}bdf
/rect{ 
4 2 roll t
1 index 0 l2
0 e l2
neg 0 l2
cp
}bdf
/EEPS{
count op_count s{pop} repeat
countdictstack dict_count s{end} repeat 
b4e rs
}bdf
BEPS
-12.00 779.76 translate
1 -1 scale
0.00 rotate
1.00 1.00 sl
12.00 -12.24 tl
0.00 0.00 576.00 792.00 rect clip np
%%Title: Graphics produced by IDL
%%Creator: IDL Version 5.4 (linux x86)
%%CreationDate: Fri Jan 23 12:12:10 2004

/$a2psdict 100 dict def
$a2psdict begin
% Initialize page description variables.
/inch {72 mul} bind def
/landscape true def
/twinpage true def
/sheetheight 11.64 inch def
/sheetwidth 8.27 inch def
/margin 1.2 inch def
/noheader false def
/headersize 0.22 inch def
/bodyfontsize 6.8 def
/lines 71 def
/columns 91 def
/date (Fri Jan 23 12:12:10 2004) def
% File: prheader.ps
% Copyright (c) 1988, Miguel Santana, miguel@imag.imag.fr
% Based on header.ps file from a2ps package

% General macros.
/xdef {exch def} bind def
/getfont {exch findfont exch scalefont} bind def

% Page description variables and inch function are defined by a2ps program.

% Character size for differents fonts.
   landscape
   { /filenamefontsize 12 def }
   { /filenamefontsize 16 def }
ifelse
/datefontsize filenamefontsize 0.8 mul def
/headermargin filenamefontsize 0.25 mul def
/bodymargin bodyfontsize 0.7 mul def

% Font assignment to differents kinds of "objects"
/filenamefontname /Helvetica-Bold def
/stdfilenamefont filenamefontname filenamefontsize getfont def
/datefont /Helvetica datefontsize getfont def
/bodyfont /Courier bodyfontsize getfont def

% Logical page attributs (a half of a real page or sheet).
/pagewidth
   bodyfont setfont (0) stringwidth pop columns mul bodymargin dup add add
   def
/pageheight
   bodyfontsize lines mul bodymargin dup add add headersize add
   def

% Coordinates for upper corner of a logical page and for sheet number.
% Coordinates depend on format mode used.
% In twinpage mode, coordinate x of upper corner is not the same for left
% and right pages: upperx is an array of two elements, indexed by sheetside.
/rightmargin margin 3 div def
/leftmargin margin 2 mul 3 div def
/topmargin margin twinpage {3} {2} ifelse div def
landscape
{  % Landscape format
   /uppery rightmargin pageheight add bodymargin add def
   /sheetnumbery sheetwidth leftmargin pageheight add datefontsize add sub def
   twinpage
   {  % Two logical pages
      /upperx [ topmargin			% upperx for left page
		dup pagewidth add		% upperx for right page
	      ] def
      /sheetnumberx sheetheight topmargin sub def
   }
   {  /upperx [ topmargin dup ] def
      /sheetnumberx sheetheight topmargin sub datefontsize sub def
   }
   ifelse
}
{  % Portrait format
   /uppery topmargin pageheight add def
   /upperx [ leftmargin dup ] def
   /sheetnumberx sheetwidth rightmargin sub datefontsize sub def
   /sheetnumbery
	 sheetheight 
	 topmargin pageheight add datefontsize add headermargin add
      sub
      def

}
ifelse

% Strings used to make easy printing numbers
/pnum 12 string def
/empty 12 string def

% Other initializations.
/datewidth date stringwidth pop def
/filenameroom
         pagewidth
	 filenamefontsize 4 mul datewidth add (Page 999) stringwidth pop add
      sub
   def


% Function newfile: init file name and reset page number for each new file.
/newfile
    { cleanup
      /filename xdef
      /filenamewidth filename stringwidth pop def
      /filenamefont
	 filenamewidth filenameroom gt
	 {
	       filenamefontname
	       filenamefontsize filenameroom mul filenamewidth div
	    getfont
	 }
	 {  stdfilenamefont }
	 ifelse
	 def
    } bind def

% Function printpage: Print a physical page.
/printpage
    { /sheetside 0 def
      twinpage noheader and
      { sheetnumber }
      if
      showpage 
%      pagesave restore
      /sheet sheet 1 add def
    } bind def

% Function cleanup: terminates printing, flushing last page if necessary.
/cleanup
    { twinpage sheetside 1 eq and
         { printpage }
      if
    } bind def

%
% Function startpage: prints page header and page border and initializes
% printing of the file lines.
/startpage
    { sheetside 0 eq
	{ % /pagesave save def
	  landscape
	    { sheetwidth 0 inch translate	% new coordinates system origin
	      90 rotate				% landscape format
	    } if
	} if
      noheader not { printheader } if
	 upperx sheetside get  bodymargin  add
	    uppery
	    bodymargin bodyfontsize add  noheader {0} {headersize} ifelse  add
	 sub
      moveto
      bodyfont setfont
    } bind def

% Function printheader: prints page header.
/printheader
    { upperx sheetside get  uppery headersize sub 1 add  moveto
      datefont setfont
      gsave
        datefontsize headermargin rmoveto
	date show					% date/hour
      grestore
      gsave
	pagenum pnum cvs pop
	   pagewidth (Page 999) stringwidth pop sub
	   headermargin
	rmoveto
        (Page ) show pnum show				% page number
      grestore
      empty pnum copy pop
      gsave
        filenamefont setfont
	      filenameroom filename stringwidth pop sub 2 div datewidth add
	      bodymargin 2 mul 
	   add 
	   headermargin
	rmoveto
        filename show						% file name
      grestore
    } bind def

%
% Function endpage: adds a sheet number to the page (footnote) and prints
% the formatted page (physical impression). Activated at the end of each
% source page (lines reached or FF character).
/endpage
   { /pagenum pagenum 1 add def
     twinpage  sheetside 0 eq  and
        { /sheetside 1 def }
        { printpage }
     ifelse
   } bind def

% Function sheetnumber: prints the sheet number.
/sheetnumber
    { sheetnumberx sheetnumbery moveto
      datefont setfont
      sheet pnum cvs
	 dup stringwidth pop (0) stringwidth pop sub neg 0 rmoveto show
      empty pnum copy pop
    } bind def

% Function s: print a source line
/s  { gsave
        show
      grestore
      0 bodyfontsize neg rmoveto
    } bind def
%%EndProlog

/sheetside 0 def
/sheet 1 def
(comp_amie_amie.pro) newfile
/pagenum 1 def
startpage
(1     ) s
(2     amie_file_1 = ask\('1st AMIE file','b.x1.m.uvi.r1.121'\)) s
(3     amie_file_2 = ask\('2nd AMIE file','b.x1.m.uvi.r1.244'\)) s
(4     psfile = ask\('ps file',amie_file_1+'.comp.ps'\)) s
(5     ) s
(6     openr,1,amie_file_1) s
(7     t = byte\(0\)) s
(8     readu,1,t) s
(9     close,1) s
(10    if \(t ge 32\) then begin) s
(11      read_barbara, amie_file_1, amie_ltpos_1, amie_lnpos_1,                $) s
(12                    amie_data_1, amie_time_1, amie_date_1,                  $) s
(13                    amie_lats_1, amie_lons_1, amie_type_1, spd, by, bz) s
(14    endif else begin) s
(15      print, '1. Potential') s
(16      print, '2. Hall') s
(17      print, '3. Pedersen') s
(18      print, '4. Simple Joule Heating') s
(19      type = fix\(ask\('field to compare','1'\)\)) s
(20      if type eq 1 then begin) s
(21        field = 0) s
(22        cttitle = 'Potential \(kV\)') s
(23      endif) s
(24      if type eq 2 then begin) s
(25        field = 4) s
(26        cttitle = 'Conductance \(mhos\)') s
(27      endif) s
(28      if type eq 3 then begin) s
(29        field = 2) s
(30        cttitle = 'Conductance \(mhos\)') s
(31      endif) s
(32      if type eq 4 then begin) s
(33        field = 8) s
(34        cttitle = 'Joule Heating \(W/m!E2!N\)') s
(35      endif) s
(36      read_amie_binary, amie_file_1, amie_data_1, amie_lats_1, amie_lons_1, $) s
(37                        amie_time_1, amie_type_1, imf,                      $) s
(38                        ae, dst, hp, cpcp, date = amie_date_1,              $) s
(39                        ltpos = amie_ltpos_1, lnpos = amie_lnpos_1,         $) s
(40                        /plotapot, field = field) s
(41    endelse) s
(42    ) s
(43    ;stop) s
(44    ) s
(45    openr,1,amie_file_2) s
(46    t = byte\(0\)) s
(47    readu,1,t) s
(48    close,1) s
(49    if \(t ge 32\) then begin) s
(50      read_barbara, amie_file_2, amie_ltpos_2, amie_lnpos_2,                $) s
(51                    amie_data_2, amie_time_2, amie_date_2,                  $) s
(52                    amie_lats_2, amie_lons_2, amie_type_2, spd, by, bz) s
(53    endif else begin) s
(54    ) s
(55      if strpos\(amie_type_1,"Potential"\) gt -1 then begin) s
(56        field = 0) s
(57        if strpos\(amie_file_1, amie_file_2\) gt -1 then begin) s
(58          print, "Assuming that comparison between stat and derived is desired") s
(59          field = 14) s
(60        endif) s
(61      endif) s
(62      if strpos\(amie_type_1,"Hall"\) gt -1 then field = 4) s
(63      if strpos\(amie_type_1,"Pedersen"\) gt -1 then field = 2) s
(64      if strpos\(amie_type_1,"Joule"\) gt -1 then field = 8) s
(65      read_amie_binary, amie_file_2, amie_data_2, amie_lats_2, amie_lons_2, $) s
(66                        amie_time_2, amie_type_2, imf,                      $) s
(67                        ae, dst, hp, cpcp, date = amie_date_2,              $) s
(68                        ltpos = amie_ltpos_2, lnpos = amie_lnpos_2,         $) s
(69                        /plotapot, field = field) s
(70    endelse) s
(71    ) s
endpage
startpage
(72    ;stop) s
(73    ) s
(74    n_amie_times_1 = n_elements\(amie_data_1\(*,0,0\)\)) s
(75    n_amie_times_2 = n_elements\(amie_data_2\(*,0,0\)\)) s
(76    ) s
(77    amie_lnpos_1 = reform\(amie_lnpos_1\(*,0\)\)*24.0/360.0) s
(78    amie_ltpos_1 = reform\(amie_ltpos_1\(0,*\)\)) s
(79    ) s
(80    amie_lnpos_2 = reform\(amie_lnpos_2\(*,0\)\)*24.0/360.0) s
(81    amie_ltpos_2 = reform\(amie_ltpos_2\(0,*\)\)) s
(82    ) s
(83    min_lat = max\([min\(amie_ltpos_1\),min\(amie_ltpos_2\)]\)) s
(84    dlat = min\([amie_ltpos_1\(0\)-amie_ltpos_1\(1\),amie_ltpos_2\(0\)-amie_ltpos_2\(1\)]\)) s
(85    nlats = fix\(\(90.0-min_lat\)/dlat\)+2) s
(86    lats = 90.0-findgen\(nlats\)*dlat) s
(87    nmlts = max\([n_elements\(amie_lnpos_1\),n_elements\(amie_lnpos_2\)]\)) s
(88    mlts = findgen\(nmlts\)*24.0/\(nmlts-1\)) s
(89    ) s
(90    lat2d = fltarr\(nmlts,nlats\)) s
(91    lon2d = fltarr\(nmlts,nlats\)) s
(92    ) s
(93    for i=0,nlats-1 do lon2d\(*,i\) = mlts*!pi/12.0 - !pi/2.0) s
(94    for i=0,nmlts-1 do lat2d\(i,*\) = lats) s
(95    ) s
(96    x = \(90.0-lat2d\)*cos\(lon2d\)) s
(97    y = \(90.0-lat2d\)*sin\(lon2d\)) s
(98    ) s
(99    if \(n_elements\(amie_lats_2\) ne n_elements\(amie_lats_1\)\) or              $) s
(100      \(n_elements\(amie_lons_2\) ne n_elements\(amie_lons_1\)\) then begin) s
(101   ) s
(102     change_amie_resolution, amie_data_1, amie_ltpos_1, amie_lnpos_1, lats, mlts) s
(103     change_amie_resolution, amie_data_2, amie_ltpos_2, amie_lnpos_2, lats, mlts) s
(104   ) s
(105   endif) s
(106   ) s
(107   nl = n_elements\(amie_ltpos_1\)) s
(108   nm = n_elements\(amie_lnpos_1\)) s
(109   ) s
(110   alat2d = fltarr\(nm,nl\)) s
(111   alon2d = fltarr\(nm,nl\)) s
(112   ) s
(113   for i=0,nl-1 do alon2d\(*,i\) = amie_lnpos_1*!pi/12.0 - !pi/2.0) s
(114   for i=0,nm-1 do alat2d\(i,*\) = amie_ltpos_1) s
(115   ) s
(116   ax = \(90.0-alat2d\)*cos\(alon2d\)) s
(117   ay = \(90.0-alat2d\)*sin\(alon2d\)) s
(118   ) s
(119   maxi_1 = float\(fix\(max\(abs\(amie_data_1\)\)/10.0\)\)*10.0) s
(120   maxi_2 = float\(fix\(max\(abs\(amie_data_2\)\)/10.0\)\)*10.0) s
(121   maxi = max\([maxi_1,maxi_2]\)) s
(122   levels = findgen\(21\)*maxi/10.0 - maxi) s
(123   ) s
(124   ppp = 15) s
(125   space = 0.005) s
(126   mr = fix\(max\(90.0-lats\)/10.0\)*10.0 + 10.0) s
(127   ) s
(128   setdevice, psfile,'p') s
(129   ) s
(130   readct, ncolors, getenv\("IDL_EXTRAS"\)+"blue_white_red.ct") s
(131   clevels = \(ncolors-1\)*findgen\(21\)/20.0 + 1) s
(132   ) s
(133   pos_space, ppp, space, sizes, nx = 3) s
(134   ) s
(135   pn = -3) s
(136   ) s
(137   amie_pattern_1 = fltarr\(nmlts,nlats\)) s
(138   amie_pattern_2 = fltarr\(nmlts,nlats\)) s
(139   n_pattern      = intarr\(nmlts,nlats\)) s
(140   time_stats     = fltarr\(4,n_amie_times_1\)-9999.0) s
(141   time_save      = dblarr\(n_amie_times_1\)) s
(142   ) s
endpage
EEPS
gr
%%PageTrailer
rs
%%BoundingBox: 12 0 600 791
showpage
%%Page: 2
%%BeginPageSetup
/#copies 1 def
sv
1.00 -1.00 sl
12.00 -779.76 tl
%%EndPageSetup
%%BoundingBox: (atend)
gs
/BEPS{
/b4e sv d
/dict_count countdictstack d
/op_count count 1 s d
userdict b
/showpage{}d
0 sg 0 sc
1 sw 0 sj
10 setmiterlimit [] 0 setdash np
/languagelevel where
{pop languagelevel
1 ne
{false setstrokeadjust false setoverprint
}if
}if
}bdf
/rect{ 
4 2 roll t
1 index 0 l2
0 e l2
neg 0 l2
cp
}bdf
/EEPS{
count op_count s{pop} repeat
countdictstack dict_count s{end} repeat 
b4e rs
}bdf
BEPS
-12.00 779.76 translate
1 -1 scale
0.00 rotate
1.00 1.00 sl
12.00 -12.24 tl
0.00 0.00 576.00 792.00 rect clip np
%%Title: Graphics produced by IDL
%%Creator: IDL Version 5.4 (linux x86)
%%CreationDate: Fri Jan 23 12:12:10 2004

/$a2psdict 100 dict def
$a2psdict begin
% Initialize page description variables.
/inch {72 mul} bind def
/landscape true def
/twinpage true def
/sheetheight 11.64 inch def
/sheetwidth 8.27 inch def
/margin 1.2 inch def
/noheader false def
/headersize 0.22 inch def
/bodyfontsize 6.8 def
/lines 71 def
/columns 91 def
/date (Fri Jan 23 12:12:10 2004) def
% File: prheader.ps
% Copyright (c) 1988, Miguel Santana, miguel@imag.imag.fr
% Based on header.ps file from a2ps package

% General macros.
/xdef {exch def} bind def
/getfont {exch findfont exch scalefont} bind def

% Page description variables and inch function are defined by a2ps program.

% Character size for differents fonts.
   landscape
   { /filenamefontsize 12 def }
   { /filenamefontsize 16 def }
ifelse
/datefontsize filenamefontsize 0.8 mul def
/headermargin filenamefontsize 0.25 mul def
/bodymargin bodyfontsize 0.7 mul def

% Font assignment to differents kinds of "objects"
/filenamefontname /Helvetica-Bold def
/stdfilenamefont filenamefontname filenamefontsize getfont def
/datefont /Helvetica datefontsize getfont def
/bodyfont /Courier bodyfontsize getfont def

% Logical page attributs (a half of a real page or sheet).
/pagewidth
   bodyfont setfont (0) stringwidth pop columns mul bodymargin dup add add
   def
/pageheight
   bodyfontsize lines mul bodymargin dup add add headersize add
   def

% Coordinates for upper corner of a logical page and for sheet number.
% Coordinates depend on format mode used.
% In twinpage mode, coordinate x of upper corner is not the same for left
% and right pages: upperx is an array of two elements, indexed by sheetside.
/rightmargin margin 3 div def
/leftmargin margin 2 mul 3 div def
/topmargin margin twinpage {3} {2} ifelse div def
landscape
{  % Landscape format
   /uppery rightmargin pageheight add bodymargin add def
   /sheetnumbery sheetwidth leftmargin pageheight add datefontsize add sub def
   twinpage
   {  % Two logical pages
      /upperx [ topmargin			% upperx for left page
		dup pagewidth add		% upperx for right page
	      ] def
      /sheetnumberx sheetheight topmargin sub def
   }
   {  /upperx [ topmargin dup ] def
      /sheetnumberx sheetheight topmargin sub datefontsize sub def
   }
   ifelse
}
{  % Portrait format
   /uppery topmargin pageheight add def
   /upperx [ leftmargin dup ] def
   /sheetnumberx sheetwidth rightmargin sub datefontsize sub def
   /sheetnumbery
	 sheetheight 
	 topmargin pageheight add datefontsize add headermargin add
      sub
      def

}
ifelse

% Strings used to make easy printing numbers
/pnum 12 string def
/empty 12 string def

% Other initializations.
/datewidth date stringwidth pop def
/filenameroom
         pagewidth
	 filenamefontsize 4 mul datewidth add (Page 999) stringwidth pop add
      sub
   def


% Function newfile: init file name and reset page number for each new file.
/newfile
    { cleanup
      /filename xdef
      /filenamewidth filename stringwidth pop def
      /filenamefont
	 filenamewidth filenameroom gt
	 {
	       filenamefontname
	       filenamefontsize filenameroom mul filenamewidth div
	    getfont
	 }
	 {  stdfilenamefont }
	 ifelse
	 def
    } bind def

% Function printpage: Print a physical page.
/printpage
    { /sheetside 0 def
      twinpage noheader and
      { sheetnumber }
      if
      showpage 
%      pagesave restore
      /sheet sheet 1 add def
    } bind def

% Function cleanup: terminates printing, flushing last page if necessary.
/cleanup
    { twinpage sheetside 1 eq and
         { printpage }
      if
    } bind def

%
% Function startpage: prints page header and page border and initializes
% printing of the file lines.
/startpage
    { sheetside 0 eq
	{ % /pagesave save def
	  landscape
	    { sheetwidth 0 inch translate	% new coordinates system origin
	      90 rotate				% landscape format
	    } if
	} if
      noheader not { printheader } if
	 upperx sheetside get  bodymargin  add
	    uppery
	    bodymargin bodyfontsize add  noheader {0} {headersize} ifelse  add
	 sub
      moveto
      bodyfont setfont
    } bind def

% Function printheader: prints page header.
/printheader
    { upperx sheetside get  uppery headersize sub 1 add  moveto
      datefont setfont
      gsave
        datefontsize headermargin rmoveto
	date show					% date/hour
      grestore
      gsave
	pagenum pnum cvs pop
	   pagewidth (Page 999) stringwidth pop sub
	   headermargin
	rmoveto
        (Page ) show pnum show				% page number
      grestore
      empty pnum copy pop
      gsave
        filenamefont setfont
	      filenameroom filename stringwidth pop sub 2 div datewidth add
	      bodymargin 2 mul 
	   add 
	   headermargin
	rmoveto
        filename show						% file name
      grestore
    } bind def

%
% Function endpage: adds a sheet number to the page (footnote) and prints
% the formatted page (physical impression). Activated at the end of each
% source page (lines reached or FF character).
/endpage
   { /pagenum pagenum 1 add def
     twinpage  sheetside 0 eq  and
        { /sheetside 1 def }
        { printpage }
     ifelse
   } bind def

% Function sheetnumber: prints the sheet number.
/sheetnumber
    { sheetnumberx sheetnumbery moveto
      datefont setfont
      sheet pnum cvs
	 dup stringwidth pop (0) stringwidth pop sub neg 0 rmoveto show
      empty pnum copy pop
    } bind def

% Function s: print a source line
/s  { gsave
        show
      grestore
      0 bodyfontsize neg rmoveto
    } bind def
%%EndProlog

/sheetside 0 def
/sheet 2 def
(comp_amie_amie.pro) newfile
/pagenum 3 def
startpage
(143   ut = dblarr\(n_amie_times_2\)) s
(144   ) s
(145   for i=0, n_amie_times_2-1 do begin) s
(146   ) s
(147     stime = strmid\(amie_date_2\(i\),4,2\)+'-'+strmid\(amie_date_2\(i\),0,3\)+'-'+$) s
(148             strmid\(amie_date_2\(i\),10,2\)) s
(149     stime = stime + ' ' + strmid\(amie_time_2\(i\),0,5\)) s
(150     c_s_to_a,itime,stime) s
(151     c_a_to_r,itime,rtime) s
(152     ut\(i\) = rtime) s
(153   ) s
(154   endfor) s
(155   ) s
(156   for n = 0, n_amie_times_1-1 do begin) s
(157   ) s
(158     stime = strmid\(amie_date_1\(n\),4,2\)+'-'+strmid\(amie_date_1\(n\),0,3\)+'-'+$) s
(159             strmid\(amie_date_1\(n\),10,2\)) s
(160     stime = stime + ' ' + strmid\(amie_time_1\(n\),0,5\)) s
(161     c_s_to_a,itime,stime) s
(162     c_a_to_r,itime,rtime) s
(163   ) s
(164     time_save\(n\) = rtime) s
(165     time_stats\(0,n\) = max\(amie_data_1\(n,*,*\)\)-min\(amie_data_1\(n,*,*\)\)) s
(166   ) s
(167     d = abs\(ut - rtime\)) s
(168     loc = where\(d eq min\(d\), count\)) s
(169   ) s
(170     namie2 = loc\(0\)) s
(171     nminutes = d\(namie2\)/60.0) s
(172   ) s
(173     pn = \(pn + 3\) mod ppp) s
(174     if pn eq 0 then begin) s
(175       plotdumb) s
(176       xyouts, 0.0, 1.04, amie_type_1,/norm) s
(177       xyouts, 0.0, 1.01, amie_date_1\(n\),/norm) s
(178     endif) s
(179   ) s
(180     get_position, ppp, space, sizes, pn, pos) s
(181     ;print, namie2) s
(182     ;help, x) s
(183     ;help, y) s
(184     contour, reform\(amie_data_2\(namie2,*,*\)\),x,y,/follow,                 $) s
(185           xstyle = 5, ystyle = 5,$) s
(186           xrange = [-mr,mr],yrange=[-mr,mr], levels = levels,             $) s
(187           pos = pos, /noerase, /cell_fill, c_color = clevels) s
(188   ) s
(189     xyouts, pos\(0\)-0.01,pos\(3\)-0.01, amie_time_1\(n\),charsize=0.9, /norm) s
(190   ) s
(191     if \(pn+3 ge ppp\) or \(n eq n_amie_times_1-1\) then                      $) s
(192       plotmlt, mr, /no06, /no12 else                                      $) s
(193       if pn-3 lt 0 then begin) s
(194         plotmlt, mr, /no06, /no00 ) s
(195         xyouts, mean\(pos\([0,2]\)\), 1.01, amie_file_2, /norm, align=0.5) s
(196       endif else begin) s
(197         plotmlt, mr, /no06, /no00, /no12) s
(198       endelse) s
(199   ) s
(200     xyouts, pos\(0\)-space*5,mean\(pos\([1,3]\)\),                              $) s
(201           '!9D!XT:'+tostr\(fix\(nminutes\)\)+" min.", $) s
(202           align = 0.5, orient = 90, /norm) s
(203   ) s
(204     get_position, ppp, space, sizes, pn+1, pos) s
(205     contour, reform\(amie_data_1\(n,*,*\)\),x,y,/follow, xstyle = 5, ystyle = 5,$) s
(206            xrange = [-mr,mr],yrange=[-mr,mr], levels = levels, /noerase,  $) s
(207           pos = pos, /cell_fill, c_color = clevels) s
(208   ) s
(209     if pn+3 ge ppp then plotmlt, mr, /no06, /no12, /no18 else             $) s
(210       if pn-3 lt 0 then begin) s
(211         plotmlt, mr, /no06, /no00, /no18 ) s
(212         xyouts, mean\(pos\([0,2]\)\), 1.01, amie_file_1, /norm, align=0.5) s
(213       endif else begin) s
endpage
startpage
(214         plotmlt, mr, /no06, /no00, /no12, /no18) s
(215       endelse) s
(216   ) s
(217     diff = reform\(amie_data_1\(n,*,*\)-amie_data_2\(namie2,*,*\)\)) s
(218   ) s
(219     amie_pattern_1\(*,*\) = amie_pattern_1\(*,*\) + amie_data_1\(n,*,*\)) s
(220     amie_pattern_2\(*,*\) = amie_pattern_2\(*,*\) + amie_data_2\(namie2,*,*\)) s
(221     n_pattern           = n_pattern + 1) s
(222     time_stats\(1,n\) = max\(amie_data_2\(namie2,*,*\)\)-min\(amie_data_2\(namie2,*,*\)\)) s
(223     time_stats\(2,n\) = abs\(time_stats\(1,n\) - time_stats\(0,n\)\)) s
(224     time_stats\(3,n\) = max\(abs\(diff\)\)) s
(225   ) s
(226     get_position, ppp, space, sizes, pn+2, pos) s
(227     contour, diff,x,y,/follow, xstyle = 5, ystyle = 5,$) s
(228            xrange = [-mr,mr],yrange=[-mr,mr], levels = levels,            $) s
(229           pos = pos, /noerase, /cell_fill, c_color = clevels) s
(230   ) s
(231     if pn+3 ge ppp then begin) s
(232       plotmlt, mr, /no12, /no18,/no06) s
(233       ctpos = [pos\(2\)+0.01,pos\(1\),pos\(2\)+0.03,pos\(3\)]) s
(234       plotct, ncolors, ctpos, [-maxi,maxi], cttitle, /right) s
(235     endif else if pn-3 lt 0 then begin) s
(236       plotmlt, mr, /no00, /no18 ) s
(237       xyouts, mean\(pos\([0,2]\)\), 1.01, "Diff.", /norm, align=0.5) s
(238     endif else begin) s
(239       plotmlt, mr, /no00, /no12, /no18) s
(240     endelse) s
(241   ) s
(242   endfor) s
(243   ) s
(244   closedevice) s
(245   ) s
(246   loc = where\(n_pattern gt 0,count\)) s
(247   if count gt 0 then begin) s
(248     amie_pattern_1\(loc\) = amie_pattern_1\(loc\)/float\(n_pattern\(loc\)\)) s
(249     amie_pattern_2\(loc\) = amie_pattern_2\(loc\)/float\(n_pattern\(loc\)\)) s
(250   endif) s
(251   ) s
(252   setdevice, strmid\(psfile,0,strpos\(psfile,'.ps'\)\)+'.diff.ps','p') s
(253   ) s
(254   dy = float\(!d.y_ch_size\)/float\(!d.y_size\)) s
(255   ) s
(256   plotdumb) s
(257   ) s
(258   xyouts, 1.0, 1.01, strcompress\(amie_type_1\),/norm, align=1.0) s
(259   ) s
(260   maxi = float\(fix\(max\([max\(abs\(amie_pattern_1\)\),                         $) s
(261                         max\(abs\(amie_pattern_2\)\)]\)/5.0\)+1\)*5.0) s
(262   levels = findgen\(21\)*maxi/10.0 - maxi) s
(263   ) s
(264   pn = 0) s
(265   get_position, ppp, space, sizes, pn, pos) s
(266   pos\([1,3]\) = pos\([1,3]\) - 0.02) s
(267   x1 = mean\(pos\([0,2]\)\)) s
(268   contour, amie_pattern_2,x,y,/follow, xstyle = 5, ystyle = 5,$) s
(269           xrange = [-mr,mr],yrange=[-mr,mr], levels = levels,             $) s
(270           pos = pos, /noerase, /cell_fill, c_color = clevels) s
(271   contour, amie_pattern_2,x,y,/follow, xstyle = 5, ystyle = 5,$) s
(272           xrange = [-mr,mr],yrange=[-mr,mr], levels = levels,             $) s
(273           pos = pos, /noerase) s
(274   plotmlt, mr, /no06) s
(275   xyouts, mean\(pos\([0,2]\)\), pos\(3\)+1.5*dy, amie_file_2, /norm, alignment = 0.5) s
(276   ) s
(277   pn = 1) s
(278   get_position, ppp, space, sizes, pn, pos) s
(279   pos\([1,3]\) = pos\([1,3]\) - 0.02) s
(280   x2 = mean\(pos\([0,2]\)\)) s
(281   y2 = mean\(pos\([1,3]\)\)) s
(282   size_y = pos\(3\) - pos\(1\)) s
(283   size_x = pos\(2\) - pos\(0\)) s
(284   contour, amie_pattern_1,x,y,/follow, xstyle = 5, ystyle = 5,$) s
endpage
EEPS
gr
%%PageTrailer
rs
%%BoundingBox: 12 0 600 791
showpage
%%Page: 3
%%BeginPageSetup
/#copies 1 def
sv
1.00 -1.00 sl
12.00 -779.76 tl
%%EndPageSetup
%%BoundingBox: (atend)
gs
/BEPS{
/b4e sv d
/dict_count countdictstack d
/op_count count 1 s d
userdict b
/showpage{}d
0 sg 0 sc
1 sw 0 sj
10 setmiterlimit [] 0 setdash np
/languagelevel where
{pop languagelevel
1 ne
{false setstrokeadjust false setoverprint
}if
}if
}bdf
/rect{ 
4 2 roll t
1 index 0 l2
0 e l2
neg 0 l2
cp
}bdf
/EEPS{
count op_count s{pop} repeat
countdictstack dict_count s{end} repeat 
b4e rs
}bdf
BEPS
-12.00 779.76 translate
1 -1 scale
0.00 rotate
1.00 1.00 sl
12.00 -12.24 tl
0.00 0.00 576.00 792.00 rect clip np
%%Title: Graphics produced by IDL
%%Creator: IDL Version 5.4 (linux x86)
%%CreationDate: Fri Jan 23 12:12:10 2004

/$a2psdict 100 dict def
$a2psdict begin
% Initialize page description variables.
/inch {72 mul} bind def
/landscape true def
/twinpage true def
/sheetheight 11.64 inch def
/sheetwidth 8.27 inch def
/margin 1.2 inch def
/noheader false def
/headersize 0.22 inch def
/bodyfontsize 6.8 def
/lines 71 def
/columns 91 def
/date (Fri Jan 23 12:12:10 2004) def
% File: prheader.ps
% Copyright (c) 1988, Miguel Santana, miguel@imag.imag.fr
% Based on header.ps file from a2ps package

% General macros.
/xdef {exch def} bind def
/getfont {exch findfont exch scalefont} bind def

% Page description variables and inch function are defined by a2ps program.

% Character size for differents fonts.
   landscape
   { /filenamefontsize 12 def }
   { /filenamefontsize 16 def }
ifelse
/datefontsize filenamefontsize 0.8 mul def
/headermargin filenamefontsize 0.25 mul def
/bodymargin bodyfontsize 0.7 mul def

% Font assignment to differents kinds of "objects"
/filenamefontname /Helvetica-Bold def
/stdfilenamefont filenamefontname filenamefontsize getfont def
/datefont /Helvetica datefontsize getfont def
/bodyfont /Courier bodyfontsize getfont def

% Logical page attributs (a half of a real page or sheet).
/pagewidth
   bodyfont setfont (0) stringwidth pop columns mul bodymargin dup add add
   def
/pageheight
   bodyfontsize lines mul bodymargin dup add add headersize add
   def

% Coordinates for upper corner of a logical page and for sheet number.
% Coordinates depend on format mode used.
% In twinpage mode, coordinate x of upper corner is not the same for left
% and right pages: upperx is an array of two elements, indexed by sheetside.
/rightmargin margin 3 div def
/leftmargin margin 2 mul 3 div def
/topmargin margin twinpage {3} {2} ifelse div def
landscape
{  % Landscape format
   /uppery rightmargin pageheight add bodymargin add def
   /sheetnumbery sheetwidth leftmargin pageheight add datefontsize add sub def
   twinpage
   {  % Two logical pages
      /upperx [ topmargin			% upperx for left page
		dup pagewidth add		% upperx for right page
	      ] def
      /sheetnumberx sheetheight topmargin sub def
   }
   {  /upperx [ topmargin dup ] def
      /sheetnumberx sheetheight topmargin sub datefontsize sub def
   }
   ifelse
}
{  % Portrait format
   /uppery topmargin pageheight add def
   /upperx [ leftmargin dup ] def
   /sheetnumberx sheetwidth rightmargin sub datefontsize sub def
   /sheetnumbery
	 sheetheight 
	 topmargin pageheight add datefontsize add headermargin add
      sub
      def

}
ifelse

% Strings used to make easy printing numbers
/pnum 12 string def
/empty 12 string def

% Other initializations.
/datewidth date stringwidth pop def
/filenameroom
         pagewidth
	 filenamefontsize 4 mul datewidth add (Page 999) stringwidth pop add
      sub
   def


% Function newfile: init file name and reset page number for each new file.
/newfile
    { cleanup
      /filename xdef
      /filenamewidth filename stringwidth pop def
      /filenamefont
	 filenamewidth filenameroom gt
	 {
	       filenamefontname
	       filenamefontsize filenameroom mul filenamewidth div
	    getfont
	 }
	 {  stdfilenamefont }
	 ifelse
	 def
    } bind def

% Function printpage: Print a physical page.
/printpage
    { /sheetside 0 def
      twinpage noheader and
      { sheetnumber }
      if
      showpage 
%      pagesave restore
      /sheet sheet 1 add def
    } bind def

% Function cleanup: terminates printing, flushing last page if necessary.
/cleanup
    { twinpage sheetside 1 eq and
         { printpage }
      if
    } bind def

%
% Function startpage: prints page header and page border and initializes
% printing of the file lines.
/startpage
    { sheetside 0 eq
	{ % /pagesave save def
	  landscape
	    { sheetwidth 0 inch translate	% new coordinates system origin
	      90 rotate				% landscape format
	    } if
	} if
      noheader not { printheader } if
	 upperx sheetside get  bodymargin  add
	    uppery
	    bodymargin bodyfontsize add  noheader {0} {headersize} ifelse  add
	 sub
      moveto
      bodyfont setfont
    } bind def

% Function printheader: prints page header.
/printheader
    { upperx sheetside get  uppery headersize sub 1 add  moveto
      datefont setfont
      gsave
        datefontsize headermargin rmoveto
	date show					% date/hour
      grestore
      gsave
	pagenum pnum cvs pop
	   pagewidth (Page 999) stringwidth pop sub
	   headermargin
	rmoveto
        (Page ) show pnum show				% page number
      grestore
      empty pnum copy pop
      gsave
        filenamefont setfont
	      filenameroom filename stringwidth pop sub 2 div datewidth add
	      bodymargin 2 mul 
	   add 
	   headermargin
	rmoveto
        filename show						% file name
      grestore
    } bind def

%
% Function endpage: adds a sheet number to the page (footnote) and prints
% the formatted page (physical impression). Activated at the end of each
% source page (lines reached or FF character).
/endpage
   { /pagenum pagenum 1 add def
     twinpage  sheetside 0 eq  and
        { /sheetside 1 def }
        { printpage }
     ifelse
   } bind def

% Function sheetnumber: prints the sheet number.
/sheetnumber
    { sheetnumberx sheetnumbery moveto
      datefont setfont
      sheet pnum cvs
	 dup stringwidth pop (0) stringwidth pop sub neg 0 rmoveto show
      empty pnum copy pop
    } bind def

% Function s: print a source line
/s  { gsave
        show
      grestore
      0 bodyfontsize neg rmoveto
    } bind def
%%EndProlog

/sheetside 0 def
/sheet 3 def
(comp_amie_amie.pro) newfile
/pagenum 5 def
startpage
(285           xrange = [-mr,mr],yrange=[-mr,mr], levels = levels,             $) s
(286           pos = pos, /noerase, /cell_fill, c_color = clevels) s
(287   contour, amie_pattern_1,x,y,/follow, xstyle = 5, ystyle = 5,$) s
(288           xrange = [-mr,mr],yrange=[-mr,mr], levels = levels,             $) s
(289           pos = pos, /noerase) s
(290   plotmlt, mr, /no06, /no18) s
(291   xyouts, mean\(pos\([0,2]\)\), pos\(3\)+1.5*dy, amie_file_1, /norm, alignment = 0.5) s
(292   ) s
(293   ctpos = [pos\(2\)+0.01,pos\(1\),pos\(2\)+0.03,pos\(3\)]) s
(294   plotct, ncolors, ctpos, [-maxi,maxi], cttitle, /right) s
(295   ) s
(296   between  = \(x2-x1\)/2.0) s
(297   x_center = x2 - between) s
(298   y_center = y2 - sqrt\(3\)*\(\(size_y+space\)/2.0\)) s
(299   ) s
(300   pos\(0\) = x_center - size_x/2) s
(301   pos\(2\) = pos\(0\) + size_x) s
(302   pos\(1\) = y_center - size_y/2) s
(303   pos\(3\) = pos\(1\) + size_y) s
(304   ) s
(305   contour, amie_pattern_1-amie_pattern_2,x,y,/follow,             $) s
(306           xstyle = 5, ystyle = 5,                                         $) s
(307           xrange = [-mr,mr],yrange=[-mr,mr], levels = levels,             $) s
(308           pos = pos, /noerase, /cell_fill, c_color = clevels) s
(309   contour, amie_pattern_1-amie_pattern_2,x,y,/follow,             $) s
(310           xstyle = 5, ystyle = 5,                                         $) s
(311           xrange = [-mr,mr],yrange=[-mr,mr], levels = levels,             $) s
(312           pos = pos, /noerase) s
(313   plotmlt, mr,/no00) s
(314   ) s
(315   pos\(3\) = pos\(1\) - space) s
(316   pos\(1\) = pos\(3\) - size_y*0.3) s
(317   pos\(0\) = pos\(0\) - size_x/4.0) s
(318   pos\(2\) = ctpos\(2\) + space*10.0) s
(319   ) s
(320   stime = min\(time_save\)) s
(321   etime = max\(time_save\)) s
(322   ) s
(323   time_axis, stime, etime, s_time_range, e_time_range,                    $) s
(324           xtickname, xtitle, xtickvalue, xminor, xtickn) s
(325   ) s
(326   plot, time_save-stime,imf\(*,2\), pos = pos,                              $) s
(327           xstyle = 1, ytitle = 'Bz \(nT\)', /noerase,                       $) s
(328           xtickname = strarr\(10\)+' ', xtickv=xtickvalue,                  $) s
(329           xticks = xtickn, xminor = xminor, xtitle = ' ',         $) s
(330           xrange = [s_time_range, e_time_range],                          $) s
(331           ytickname = [' ','',' ','',' ','',' ','',' ','',' ']) s
(332   ) s
(333   oplot, mm\(time_save-stime\),[0.0,0.0], linestyle = 1) s
(334   ) s
(335   pos\(3\) = pos\(1\) - space) s
(336   pos\(1\) = pos\(3\) - size_y*0.6) s
(337   ) s
(338   maxi = float\(fix\(max\([time_stats\(0,*\),time_stats\(1,*\)]\)/10.0\)+1\)*10.0) s
(339   ) s
(340   plot, time_save-stime,time_stats\(0,*\), pos = pos,                       $) s
(341           yrange = [0,maxi], xstyle = 1, ystyle = 1,                      $) s
(342           ytitle = cttitle, /noerase, min_value = -maxi,                  $) s
(343           xtickname = xtickname, xtickv=xtickvalue,                       $) s
(344           xticks = xtickn, xminor = xminor, xtitle = xtitle,              $) s
(345           xrange = [s_time_range, e_time_range]) s
(346   ) s
(347   loc = where\(time_stats\(2,*\) gt -maxi,count\)) s
(348   if count gt 0 then begin) s
(349     xyouts, pos\(0\), pos\(1\) - 0.08, 'Average Deviation : '+        $) s
(350           string\(mean\(time_stats\(2,loc\)\)\), /norm) s
(351     xyouts, pos\(0\), pos\(1\) - 0.10, 'Average Maximum Deviation : '+        $) s
(352           string\(mean\(time_stats\(3,loc\)\)\), /norm) s
(353   endif) s
(354   ) s
(355   oplot, time_save-stime, time_stats\(1,*\), linestyle = 2, min_value = -maxi) s
endpage
startpage
(356   oplot, time_save-stime, time_stats\(2,*\), linestyle = 1, min_value = -maxi) s
(357   ) s
(358   closedevice) s
(359   ) s
(360   end) s
endpage

%%Trailer
cleanup
EEPS
gr
%%PageTrailer
rs
%%BoundingBox: 12 0 600 791
showpage
%%Trailer
%%Pages: 3
end
%%DocumentSuppliedResources: 
%%EOF
<1B>%-12345X@PJL EOJ<0A>
