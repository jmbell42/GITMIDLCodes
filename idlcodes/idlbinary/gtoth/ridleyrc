;^CFG COPYRIGHT UM
;To run this script you have the followin options:
;To run this idlrc automatically every time idl is started
;set in the .login or .cshrc file
;  setenv IDL_STARTUP idlrc
;To run it for a particular IDL session, start IDL as
;  idl idlrc
;or inside IDL at the IDL> prompt type
;  @idlrc

.r procedures
.r vector
.r funcdef
.r str_sep
.r defaults
spawn,'uname',uname
if strpos(uname[0],'IRIX')  ge 0 then device,retain=2,pseudo_color=8
if strpos(uname[0],'Linux') ge 0 then device,decompose=0

;!x.range = [25.0,-210.]
;!y.range = [-100.0,100.0]

;!x.range = [30.0,-200.0]
;!y.range = [-100.0,100.0]

;!x.range = [0.0,-6.0]
;!y.range = [0.0,6.0]

!x.range = [15.0,-40.0]
!y.range = [-25.0,25.0]

; Use this for mprc:
;!x.range = [15.0,5.0]
;!y.range = [-5.0,5.0]

;func_back = 'jy'

;autorange = 'n'
;fmin = [-1.22,-1.0]
;fmax = [-0.1,1.0]

;fmin = [0.1,-1.0]
;fmax = [2.0,1.0]

filelist_x = findfile('x=0*.out')
filelist_y = findfile('y=0*.out')
filelist_z = findfile('z=0*.out')
nfiles_x = n_elements(filelist_x)
nfiles_y = n_elements(filelist_y)
nfiles_z = n_elements(filelist_z)

plottitle = ' '
;plottitle = 'log(p) (log(nP)) Over Streamlines'

;plottitle = 'J!Dy!N (!Mm!XA/m!U2!N) Over B Traces'


plane = mklower(ask('whether you want X, Y, or Z plane','Y'))

if (strpos(plane,'x') eq 0) then nfiles = nfiles_x
if (strpos(plane,'y') eq 0) then nfiles = nfiles_y
if (strpos(plane,'z') eq 0) then nfiles = nfiles_z

ifile = fix(ask('file number to plot',tostr(nfiles)))-1

if (strpos(plane,'x') eq 0) then filename = filelist_x(ifile)
if (strpos(plane,'y') eq 0) then filename = filelist_y(ifile)
if (strpos(plane,'z') eq 0) then filename = filelist_z(ifile)

funclist = ['alog10(rho)','rho','alog10(p)','p','ux','uy','uz','jy','jz','ux;uz']
for i=0,n_elements(funclist)-1 do print, tostr(i)+'. '+funclist(i)

funcnum = ask('function to plot (-1 to enter your own)','0')
if (funcnum ge 0 and funcnum lt n_elements(funclist)) then func_back = funclist(fix(funcnum)) else func_back = ask('func','jy')

setdevice, filename+'.ps'
;setdevice, 'current_2.ps'
;setdevice, 'density.ps'

plotmode='contbargrid bodystream2'

npictmax = 200
dpict = 10


xreglimits=[min(!x.range),min(!y.range),max(!x.range),max(!y.range)]
dxreg = xreglimits(2) - xreglimits(0)
dyreg = xreglimits(3) - xreglimits(1)

maxreg = max([dxreg,dyreg])

nxreg=[-dxreg,-dyreg]
transform='regular'
dotransform='n'

read_idl_file, filename, npict, nxreg, xreglimits, transform, $
                   nfile, physics, ndim, gencoord, it, time,  $
                   nx, x, xreg, nw, w, wreg, wnames, variables, 1

fac = 3
if variables(0) eq 'x' and variables(1) eq 'y' then begin & func=func_back+' ux;uy' & yr = !y.range & !y.range = [yr(1), yr(0)] & fac = 4 & endif
if variables(0) eq 'x' and variables(1) eq 'z' then func=func_back+' bx;bz'
if variables(0) eq 'y' and variables(1) eq 'z' then func=func_back+' jy;jz'

;func='alog(p) bx;bz'

!p.symsize=0.5

;nv = 20
;velvector= nv*fac
;velpos = fltarr(velvector,2)
;
;velpos(0:nv-1,0) = findgen(nv)/nv * dxreg + min(!x.range)
;velpos(0:nv-1,1) = max(!y.range) -dyreg*0.5 + dyreg*0.5*findgen(nv)/nv
;
;velpos(nv:2*nv-1,0) = findgen(nv)/nv * dxreg + min(!x.range)
;if (fac eq 3) then velpos(nv:2*nv-1,1) = max(!y.range)-dyreg*0.5
;if (fac eq 4) then velpos(nv:2*nv-1,1) = max(!y.range)-dyreg*0.55
;
;velpos(2*nv:3*nv-1,0) = findgen(nv)/nv * dxreg + min(!x.range)
;velpos(2*nv:3*nv-1,1) = max(!y.range) -dyreg*0.5 - dyreg*0.5*findgen(nv)/nv
;
;if (fac eq 4) then velpos(3*nv:4*nv-1,0) = findgen(nv)/nv * dxreg + min(!x.range)
;if (fac eq 4) then velpos(3*nv:4*nv-1,1) = max(!y.range)-dyreg*0.45

multiplot = 1

if strpos(!d.name,'X') gt -1 then window, xsize=1000,ysize=800
if strpos(!d.name,'PS') gt -1 then makect,'mid' else makect,'bbr'

;makect,'blue'

!p.charsize = 1.2

if plottitle eq ' ' then plottitle = func

if (strpos(plottitle,';') gt -1) then plottitle = strmid(plottitle,0,strpos(plottitle,';'))+':'+strmid(plottitle,strpos(plottitle,';')+1, strlen(plottitle))

.r plotfunc

if plottitle eq func then plottitle = ' '

theta = findgen(37)*!pi*2.0/36.0
r = 2.5
polyfill, r*cos(theta), r*sin(theta), color = 0

closedevice
