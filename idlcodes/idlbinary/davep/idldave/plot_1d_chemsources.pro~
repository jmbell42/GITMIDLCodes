d = '.'
directories = '.'

if n_elements(f) eq 0 then f =''
f = ask('date and time to plot (dd_hhmm): ',f)
flen = strlen(d)
if strpos(d,'*') ne -1 then flen = flen - 1

file = file_search(directories(0)+'/*'+f+'*')
nfiles_new = n_elements(file)
if n_elements(file) eq 0 then begin
    print, "No matching files... "
    stop
endif

if nfiles_new gt 1 then begin
    filetype = strarr(nfiles_new)
    for ifile = 0, n_elements(file) -1 do begin
        l1 = strpos(file(ifile),'/',/reverse_search)+1
        filetype(ifile) = strmid(file(ifile),l1,5)
        print, tostr(ifile), '    ',filetype(ifile)
    endfor
    if n_elements(ft) eq 0 then ft = 0
    ft = fix(ask('which filetype: ',tostr(ft)))
    whichtype = filetype(ft)
    file = file_search(directories(0)+'/'+whichtype+'*'+f+'*')
endif

gitm_read_bin, file, data,time,nvars,vars,version

nalts = n_elements(data(0,0,0,*))
alts = reform(data(2,0,0,0:nalts-1))/1000.

svars = where(strpos(vars,'Source') ge 0)
lvars = where(strpos(vars,'Loss') ge 0)

nsvars = n_elements(svars)
nlvars = n_elements(lvars)

svalue = fltarr(nsvars,nalts)
lvalue = fltarr(nlvars,nalts)

 if nfiles_new eq 1 then file = file_search(directories(idir)+'/*'+f+'*') else $
    file = file_search(directories(idir)+'/'+whichtype+'*'+f+'*')
 for ivar = 0, nsvars - 1 do begin
    
    get_1d_profile,file,vars(svars(ivar),coordinates,profile
    svalue(ivar,*) = profile
    
 endfor
 
 for ivar = 0, nlvars - 1 do begin
          
    get_1d_profile,file,vars(lvars(ivar),coordinates,profile
    lvalue(ivar,*) = profile
    
 endfor
 
setdevice, 'plot.ps','p',5,.95
loadct,39
ppp=4
space = 0.08
pos_space, ppp, space, sizes

if n_elements(dolog) eq 0 then dolog = 'n'
dolog = ask('whether to plot log: ',dolog)
if dolog eq 'y' then value = alog10(value)

if n_elements(mini) eq 0 then mini = 0.0
if n_elements(maxi) eq 0 then maxi = 0.0
mini = float(ask('minimum value to plot (0 for auto): ', tostrf(mini)))
maxi = float(ask('maximum value to plot (0 for auto): ', tostrf(maxi)))

if mini eq 0 then mini = min(value(*,2:nalts-3))-.1*min(value(*,2:nalts-3))
if maxi eq 0 then maxi = max(value(*,2:nalts-3))+.1*max(value(*,2:nalts-3))
xrange = [mini,maxi]


